; a generative tox configuration, see: https://tox.readthedocs.io/en/latest/config.html#generative-envlist
;
[flake8]
max-line-length = 100

[tox]
skip_missing_interpreters=True
envlist =
    clean,
    check,
    {py37},
    report,
    apidoc,
    doctest,
    docs

[testenv]
basepython =
    spell: {env:TOXPYTHON:python2.7}
    py37: {env:TOXPYTHON:python3.7}
    {clean,check,apidoc,docs,doctest,report}: {env:TOXPYTHON:python3}
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
    PYTHONASYNCIODEBUG=1
passenv =
    *
usedevelop = false
deps =
    -rrequirements.txt
    pytest
    pytest-asyncio
    pytest-travis-fold
    pytest-cov
    pdbpp
commands =
    {posargs:pytest --cov --cov-report=term-missing -vv tests}

[testenv:spell]
setenv =
    SPELLCHECK=1
commands =
    sphinx-build -b spelling docs dist/docs
skip_install = true
deps =
    -r{toxinidir}/docs/requirements.txt
    sphinxcontrib-spelling
    pyenchant

[testenv:apidoc]
whitelist_externals =
    bash
deps =
    -rrequirements.txt
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-apidoc {posargs:-M} -e -f -d 2 -o docs/reference src/pharmpy
    bash docs/post-apidoc.sh docs/reference

[testenv:doctest]
deps =
    -rrequirements.txt
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build {posargs:-E} -b doctest docs dist/docs

[testenv:docs]
deps =
    -rrequirements.txt
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build {posargs:-E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs

[testenv:check]
deps =
    docutils
    check-manifest
    flake8
    readme-renderer
    pygments
    isort
skip_install = true
commands =
    python setup.py check --strict --metadata --restructuredtext
    check-manifest -v {toxinidir}
    flake8 src tests setup.py
    isort --verbose --check-only --diff --recursive src tests setup.py

[testenv:coveralls]
deps =
    coveralls
skip_install = true
commands =
    coveralls []

[testenv:codecov]
deps =
    codecov
skip_install = true
commands =
    coverage xml --ignore-errors
    codecov []


[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage report
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage
