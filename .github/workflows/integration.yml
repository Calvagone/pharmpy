name: Integration

on:
  workflow_call:
  workflow_dispatch:

jobs:
  get-nonmem:
    runs-on: ubuntu-latest
    steps:
      - name: Cache NONMEM
        id: cache-nonmem
        uses: actions/cache@v2
        with:
            path: 751.zip
            key: nonmem-751
      - name: Download NONMEM
        if: steps.cache-nonmem.outputs.cache-hit != 'true'
        run: |
          sudo apt install lynx
          echo 'key /' >>lynxcmds
          echo 'key 7' >>lynxcmds
          echo 'key 5' >>lynxcmds
          echo 'key 1' >>lynxcmds
          echo 'key ^J' >>lynxcmds
          echo 'key ^J' >>lynxcmds
          echo 'key /' >>lynxcmds
          echo 'key z' >>lynxcmds
          echo 'key i' >>lynxcmds
          echo 'key p' >>lynxcmds
          echo 'key ^J' >>lynxcmds
          echo 'key d' >>lynxcmds
          echo 'key ^J' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key <delete>' >>lynxcmds
          echo 'key 7' >>lynxcmds
          echo 'key 5' >>lynxcmds
          echo 'key 1' >>lynxcmds
          echo 'key .' >>lynxcmds
          echo 'key z' >>lynxcmds
          echo 'key i' >>lynxcmds
          echo 'key p' >>lynxcmds
          echo 'key ^J' >>lynxcmds
          echo 'key Q' >>lynxcmds
          lynx -accept-all-cookies nonmem.iconplc.com -cmd_script=lynxcmds
      - name: Upload cache workaround
        uses: actions/upload-artifact@v2
        with:
          name: cache-workaround
          path: 751.zip

  integration-ubuntu:
    needs: [get-nonmem]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Pharmpy
        uses: actions/checkout@v1
      - name: Get NONMEM
        uses: actions/download-artifact@v2
        with:
          name: cache-workaround
      - name: Unzip NONMEM
        env:
          ZIP_KEY: ${{secrets.ZIP_KEY}}
        run: unzip -P $ZIP_KEY 751.zip
      - name: Install gfortran
        run: sudo apt install gfortran
      - name: Install NONMEM
        run: |
          cd nm751CD
          /bin/bash SETUP75 $(realpath .) $(realpath ../nm751) gfortran y ar same rec q
      - name: NONMEM license
        run: echo $LICENSE_KEY >nm751/license/nonmem.lic
        env:
          LICENSE_KEY: ${{secrets.LICENSE_KEY}}
      - name: Create pharmpy.conf
        run: |
          export CONFDIR=/home/runner/.config/Pharmpy
          mkdir -p $CONFDIR
          echo '[pharmpy.plugins.nonmem]' > $CONFDIR/pharmpy.conf
          echo 'parameter_names=comment,basic' >> $CONFDIR/pharmpy.conf
          echo "default_nonmem_path=$(realpath nm751)" >> $CONFDIR/pharmpy.conf
          cat $CONFDIR/pharmpy.conf
          ls -l /home/runner/work/pharmpy/pharmpy/nm751
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox
      - name: Run integration tests
        run: tox -e integration
        env:
          PLATFORM: ubuntu-latest
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          flags: integration,ubuntu-latest,python-3.9
          files: ./.coverage.xml

  integration-macos:
    needs: [get-nonmem]
    runs-on: macos-latest
    steps:
      - name: Checkout Pharmpy
        uses: actions/checkout@v1
      - name: Setup gfortran
        run: |
          sudo ln -s /usr/local/bin/gfortran-9 /usr/local/bin/gfortran
          sudo mkdir /usr/local/gfortran
          sudo ln -s /usr/local/Cellar/gcc@9/9.3.0_1/lib/gcc/9 /usr/local/gfortran/lib
      - name: Install realpath
        run: brew install coreutils
      - name: Get NONMEM
        uses: actions/download-artifact@v2
        with:
          name: cache-workaround
      - name: Unzip NONMEM
        env:
          ZIP_KEY: ${{secrets.ZIP_KEY}}
        run: unzip -P $ZIP_KEY 751.zip
      - name: Install NONMEM
        run: |
          cd nm751CD
          /bin/bash SETUP75 $(realpath .) $(realpath ../nm751) gfortran y ar same rec q
      - name: NONMEM license
        run: echo $LICENSE_KEY >nm751/license/nonmem.lic
        env:
          LICENSE_KEY: ${{secrets.LICENSE_KEY}}
      - name: Create pharmpy.conf
        run: |
          export CONFDIR=/Users/runner/Library/Application\ Support/Pharmpy
          mkdir -p "$CONFDIR"
          echo '[pharmpy.plugins.nonmem]' > "$CONFDIR/pharmpy.conf"
          echo 'parameter_names=comment,basic' >> "$CONFDIR/pharmpy.conf"
          echo "default_nonmem_path=$(realpath nm751)" >> "$CONFDIR/pharmpy.conf"
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox
      - name: Run integration tests
        run: tox -e integration
        env:
          PLATFORM: macos-latest
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          flags: integration,macos-latest,python-3.9
          files: ./.coverage.xml

  integration-windows:
      needs: [get-nonmem]
      runs-on: windows-latest
      steps:
        - name: Checkout Pharmpy
          uses: actions/checkout@v1
        - name: Get NONMEM
          uses: actions/download-artifact@v2
          with:
              name: cache-workaround
        - name: Unzip NONMEM
          env:
            ZIP_KEY: ${{secrets.ZIP_KEY}}
          run: 7z x 751.zip -p%ZIP_KEY%
          shell: cmd
        - name: NONMEM license
          run: echo $LICENSE_KEY >nm751CD/nonmem.lic
          env:
            LICENSE_KEY: ${{secrets.LICENSE_KEY}}
          shell: bash
        - name: Install NONMEM
          run: |
            set INSTALLDIR=%CD%\nm751
            cd nm751CD
            SETUP75.bat %CD% %INSTALLDIR% gfortran y ar same rec q
          shell: cmd
        - name: Create pharmpy.conf
          run: |
            export CONFDIR=/c/Users/runneradmin/AppData/Local/Pharmpy/Pharmpy
            mkdir -p $CONFDIR
            echo '[pharmpy.plugins.nonmem]' > $CONFDIR/pharmpy.conf
            echo 'parameter_names=comment,basic' >> $CONFDIR/pharmpy.conf
            echo 'default_nonmem_path=D:\a\pharmpy\pharmpy\nm751' >> $CONFDIR/pharmpy.conf
          shell: bash
        - name: Set up Python 3.9
          uses: actions/setup-python@v2
          with:
            python-version: 3.9
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install tox
        - name: Run integration tests
          run: tox -e integration
          env:
            PLATFORM: windows-latest
        - name: Upload coverage to Codecov
          uses: codecov/codecov-action@v2
          with:
            flags: integration,windows-latest,python-3.9
            files: ./.coverage.xml
