name: main

on:
  workflow_call:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:

  unit:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10']
        include:
          - tox-env: 'unit'
          - python-version: '3.8'
            tox-env: ${{ github.actor != 'dependabot[bot]' && 'unit-cover' || 'unit' }}
        exclude:
          - platform: windows-latest
            python-version: '3.10'

    runs-on: ${{ matrix.platform }}

    steps:

      - uses: actions/checkout@v3

      - uses: ./.github/actions/setup-tox
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run unit tests with tox${{ matrix.tox-env == 'unit-cover' && ' (with coverage).' || '.' }}
        shell: bash
        run: |
            tox -e ${{ matrix.tox-env }}

      - uses: codecov/codecov-action@v3
        if: matrix.tox-env == 'unit-cover'
        with:
          flags: unit,${{ matrix.platform }},python-${{ matrix.python-version }}
          files: ./.coverage.xml


  doctest:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10']
        exclude:
          - platform: windows-latest
            python-version: '3.10'

    runs-on: ${{ matrix.platform }}

    steps:

      - uses: actions/checkout@v3

      - uses: ./.github/actions/setup-tox
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run doctest tests with tox
        shell: bash
        run: tox -e doctest


  lint:
    strategy:
      matrix:
        platform: [ubuntu-latest]
        python-version: ['3.8']

    runs-on: ${{ matrix.platform }}

    steps:

      - uses: actions/checkout@v3

      - uses: ./.github/actions/setup-tox
        with:
          python-version: ${{ matrix.python-version }}

      - name: Lint MANIFEST and Python files
        run: tox -e lint


  docs-build:
    strategy:
      matrix:
        platform: [ubuntu-latest]
        python-version: ['3.9']

    runs-on: ${{ matrix.platform }}

    steps:

      - uses: actions/checkout@v3

      - uses: ./.github/actions/setup-tox
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install graphviz
        run: sudo apt install graphviz

      - name: Build docs
        run: tox -e docs-build


  docs-test:
    strategy:
      matrix:
        platform: [ubuntu-latest]
        python-version: ['3.9']

    runs-on: ${{ matrix.platform }}

    steps:

      - uses: actions/checkout@v3

      - uses: ./.github/actions/setup-tox
        with:
          python-version: ${{ matrix.python-version }}

      - name: Test docs
        run: tox -e docs-test


  docs-lint:
    strategy:
      matrix:
        platform: [ubuntu-latest]
        python-version: ['3.9']

    runs-on: ${{ matrix.platform }}

    steps:

      - uses: actions/checkout@v3

      - uses: ./.github/actions/setup-tox
        with:
          python-version: ${{ matrix.python-version }}

      - name: Lint docs
        run: tox -e docs-lint
