name: Deploy

on:
  push:
    tags:
      - 'v*'

jobs:
  check-ci-tests:
    runs-on: ubuntu-latest
    strategy:
        matrix:
          platform: [ubuntu-latest, macos-latest, windows-latest]
          python-version: ['3.7', '3.8.9', '3.9']
    steps:
      - uses: actions/checkout@master
      - name: Wait on CI test
        uses: lewagon/wait-on-check-action@v0.2
        with:
          ref: ${{ github.sha }}
          running-workflow-name: wait-for-ci
          check-name: build-ci (${{ matrix.platform }}, ${{ matrix.python-version }})
          repo-token: ${{ secrets.DOC_TOKEN }}
          wait-interval: 20
  check-get-nonmem:
      runs-on: ubuntu-latest
      steps:
          -   uses: actions/checkout@master
          -   name: Wait on nonmem
              uses: lewagon/wait-on-check-action@v0.2
              with:
                  ref: ${{ github.sha }}
                  running-workflow-name: check-get-nonmem
                  check-name: get-nonmem
                  repo-token: ${{ secrets.DOC_TOKEN }}
                  wait-interval: 20
  check-integration-tests:
      needs: check-get-nonmem
      runs-on: ubuntu-latest
      strategy:
          matrix:
              platform: [ ubuntu, macos, windows ]
      steps:
          -   uses: actions/checkout@master
          -   name: Wait on integration tests
              uses: lewagon/wait-on-check-action@v0.2
              with:
                  ref: ${{ github.sha }}
                  running-workflow-name: check-integration-tests
                  check-name: integration-${{ matrix.platform }}
                  repo-token: ${{ secrets.DOC_TOKEN }}
                  wait-interval: 20
  build:
    needs: [check-ci-tests, check-integration-tests]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout pharmpy/pharmpy
      uses: actions/checkout@v2
      with:
          path: pharmpy
    - name: Checkout pharmpy/pharmpy.github.io
      uses: actions/checkout@v2
      with:
        repository: pharmpy/pharmpy.github.io
        path: pharmpy.github.io
        token: ${{secrets.DOC_TOKEN}}
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.8.9"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel tox tox-gh-actions
        sudo apt install graphviz
    - name: Test with tox
      run: |
        cd pharmpy
        tox
      env:
        PLATFORM: ${{ matrix.platform }}
    - name: Build documentation
      run: |
        cd pharmpy
        tox -e apidoc
        tox -e docs
    - name: Build wheel
      run: |
        cd pharmpy
        python setup.py bdist_wheel
    - name: Build source package
      run: |
        cd pharmpy
        python setup.py sdist --formats=gztar
    - name: Prepare upload files
      run: |
        cd pharmpy
        mkdir upload
        cp dist/*.whl dist/*.tar.gz upload
    - name: Publish documentation
      run: |
        cp -RT pharmpy/dist/docs/ pharmpy.github.io/latest/
        cd pharmpy.github.io
        git config --local user.name "github-actions[bot]"
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git add -A
        git commit -m "Documentation update"
        git push https://$USERNAME:$REPO_KEY@github.com/pharmpy/pharmpy.github.io.git
      env:
        REPO_KEY: ${{secrets.DOC_TOKEN}}
        USERNAME: github-actions[bot]
    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages_dir: pharmpy/upload/
  trigger-pharmr-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Trigger pharmr workflow
        run: |
          curl \
          -X POST \
          -H "Accept: application/vnd.github.v3+json" \
          -u "$USERNAME:$REPO_KEY" \
          https://api.github.com/repos/pharmpy/pharmr/actions/workflows/build_docs.yaml/dispatches \
          -d '{"ref":"main"}'
        env:
            REPO_KEY: ${{secrets.DOC_TOKEN}}
            USERNAME: github-actions[bot]
